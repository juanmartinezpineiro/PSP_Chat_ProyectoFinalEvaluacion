package chatcliente;

import static chatcliente.Chat.jTextoenv;
import static chatcliente.IGrafica.jPuerto;
import static chatcliente.IGrafica.jUser;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JTextPane;


/**
 *
 * @author Juan Martínez
 */

public class Chat extends javax.swing.JFrame {

    public static OutputStream os;
    public static InputStream is;
    public Socket clienteSckt;
    
    public Chat() {
        initComponents();
        campouser.setText(jUser.getText());
        
        //Se establece el puerto
        try {
            int puerto = Integer.parseInt(jPuerto.getText());
            Socket clienteSckt = new Socket();
            
            System.out.println("Creando socket");
            
            System.out.println("Establece conexión");
            InetSocketAddress addr = new InetSocketAddress("192.168.0.1", puerto);
            clienteSckt.connect(addr);
            os = clienteSckt.getOutputStream();
            is = clienteSckt.getInputStream();
            
        } catch (IOException ex) {
            System.out.println("Error  conexión");
            System.exit(0);
        }
        RecibirMensaje recibe=new RecibirMensaje(is);
            recibe.start();
    }
    //metodo recibir mensaje
     public static void recibirMensaje() {
        try {
            byte[] mensajeRecibido = new byte[120];
            is.read(mensajeRecibido);
            String nuevoMensaje = new String(mensajeRecibido);
            jChat.setText(jChat.getText() + "\n" + nuevoMensaje);
            jTextoenv.setText("");
        } catch (IOException ex) {
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        campouser = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jChat = new javax.swing.JTextArea();
        jTextoenv = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("User:");

        jChat.setColumns(20);
        jChat.setRows(5);
        jScrollPane1.setViewportView(jChat);

        jTextoenv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextoenvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextoenv)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(campouser, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campouser, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextoenv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextoenvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextoenvActionPerformed
        if (jTextoenv.getText().contains("/disc")){
            System.out.println("Cerrando");
            System.exit(0);
        } else {
            try {
                String mensaje = jUser.getText() + ": " + jTextoenv.getText();
                System.out.println(mensaje);
                os.write(mensaje.getBytes());
                System.out.println("Enviado");
            } catch (IOException ex) {
                System.out.println("Error: " + ex);
            }
        }
    }//GEN-LAST:event_jTextoenvActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Chat().setVisible(true);
                
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel campouser;
    public static javax.swing.JTextArea jChat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField jTextoenv;
    // End of variables declaration//GEN-END:variables
}


class RecibirMensaje extends Thread {

    InputStream is;

    public RecibirMensaje(InputStream is) {
        this.is = is;
    }


    @Override
    public void run() {
//Mensajes recibidos
        while (true) {
            Chat.recibirMensaje();
        }

    }
}
